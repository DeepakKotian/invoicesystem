{
    "openapi": "3.0.0",
    "info": {
        "title": "Invoice System API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/cart/add": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add a product to the cart",
                "description": "This endpoint adds a product to the user's cart. If the product is already in the cart, it increases the quantity. If the stock is insufficient, it returns an error.",
                "operationId": "af5c3a2c065e9b55aaa49e4cf9b0f9ab",
                "requestBody": {
                    "description": "Data for adding a product to the cart",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product_id",
                                    "quantity",
                                    "customer_id"
                                ],
                                "properties": {
                                    "product_id": {
                                        "description": "ID of the product to add to the cart",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quantity": {
                                        "description": "Quantity of the product to add",
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "customer_id": {
                                        "description": "ID of the customer",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully"
                                        },
                                        "cart": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "customer_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-11-13T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-11-13T10:05:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Insufficient Stock",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No Stock"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Out of Stock."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "messages": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The selected product_id is invalid."
                                                    }
                                                },
                                                "quantity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The quantity field must be an integer."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/cart/view": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "View all items in the cart",
                "description": "This endpoint returns all the products added to the customer's cart. If the cart is empty, a 404 response is returned.",
                "operationId": "062ced901100f2e3380e2c6d30208775",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved cart items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cart_items": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "productId": {
                                                        "description": "ID of the product in the cart",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "customer_id": {
                                                        "description": "ID of the customer",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Sample Product"
                                                    },
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "cartId": {
                                                        "description": "Cart item ID",
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "quantity": {
                                                        "description": "Quantity of the product in the cart",
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cart is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your cart is empty."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Retrieve a list of all categories",
                "description": "This endpoint returns a list of all categories available in the system.",
                "operationId": "3f5817a34833d0a1f4af4548dd3aeaba",
                "responses": {
                    "200": {
                        "description": "List of categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Category ID",
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "description": "Category name",
                                                "type": "string",
                                                "example": "Electronics"
                                            },
                                            "description": {
                                                "description": "Category description",
                                                "type": "string",
                                                "example": "Products related to electronics"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while retrieving the categories."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/save": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Save or update a category",
                "description": "This endpoint is used to create a new category or update an existing one based on the provided ID.",
                "operationId": "e9871c1a9226412cd83c8f5575b1922b",
                "requestBody": {
                    "description": "Category data to create or update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Category ID (for update)",
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    },
                                    "name": {
                                        "description": "Category name",
                                        "type": "string",
                                        "example": "Electronics"
                                    },
                                    "description": {
                                        "description": "Category description",
                                        "type": "string",
                                        "example": "Products related to electronics",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category saved successfully"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Category name"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Category Description"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-11-13T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-11-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/update": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update an existing category",
                "description": "This endpoint updates the details of a specific category by ID.",
                "operationId": "updateCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "id",
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of the category to update",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "description": "New name of the category",
                                        "type": "string",
                                        "example": "Updated Category"
                                    },
                                    "description": {
                                        "description": "New description of the category",
                                        "type": "string",
                                        "example": "Updated description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Category"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/delete/{id}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "description": "Deletes a category by its ID. If the category does not exist, a 404 Not Found response is returned.",
                "operationId": "f9660aeb5f9deaff3c837b786611da8a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Not Found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customers": {
            "get": {
                "tags": [
                    "Customers"
                ],
                "summary": "Retrieve a paginated list of customers",
                "description": "This endpoint returns a paginated list of all customers in the system.",
                "operationId": "2b23ac696cfd81c23807c2c1fd63b0b0",
                "responses": {
                    "200": {
                        "description": "Paginated list of customers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "description": "List of customers",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Customer ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Customer's name",
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "description": "Customer's email",
                                                        "type": "string",
                                                        "example": "johndoe@example.com"
                                                    },
                                                    "address": {
                                                        "description": "Customer's address",
                                                        "type": "string",
                                                        "example": "1234 Main St, City, Country"
                                                    },
                                                    "contact_number": {
                                                        "description": "Customer's contact number",
                                                        "type": "string",
                                                        "example": "1234567890"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "first_page_url": {
                                            "description": "URL of the first page",
                                            "type": "string",
                                            "example": "http://example.com/api/customers?page=1"
                                        },
                                        "from": {
                                            "description": "Starting item index of the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Last page number",
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "last_page_url": {
                                            "description": "URL of the last page",
                                            "type": "string",
                                            "example": "http://example.com/api/customers?page=5"
                                        },
                                        "next_page_url": {
                                            "description": "URL of the next page",
                                            "type": "string",
                                            "example": "http://example.com/api/customers?page=2",
                                            "nullable": true
                                        },
                                        "path": {
                                            "description": "Base URL for pagination",
                                            "type": "string",
                                            "example": "http://example.com/api/customers"
                                        },
                                        "per_page": {
                                            "description": "Number of items per page",
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "description": "URL of the previous page",
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "to": {
                                            "description": "Ending item index of the current page",
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "description": "Total number of items in the collection",
                                            "type": "integer",
                                            "example": 75
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/save": {
            "post": {
                "tags": [
                    "Customers"
                ],
                "summary": "Add or Update a Customer",
                "description": "This endpoint creates a new customer or updates an existing one based on the provided customer ID.",
                "operationId": "9264cf21dabaa7fdd6032a669d727ca4",
                "requestBody": {
                    "description": "Customer details for creation or update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Customer ID (if updating an existing customer)",
                                        "type": "integer",
                                        "example": null,
                                        "nullable": true
                                    },
                                    "name": {
                                        "description": "Customer's name",
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "Customer's email address",
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "address": {
                                        "description": "Customer's address",
                                        "type": "string",
                                        "example": "1234 Main St, City, Country"
                                    },
                                    "contact_number": {
                                        "description": "Customer's contact number",
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Customer created or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer saved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "address": {
                                                    "type": "string",
                                                    "example": "1234 Main St, City, Country"
                                                },
                                                "contact_number": {
                                                    "type": "string",
                                                    "example": "1234567890"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-11-13T10:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-11-13T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "messages": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email must be a valid email address."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/invoice/generate": {
            "post": {
                "tags": [
                    "Invoice"
                ],
                "summary": "Generate an invoice from the customer's cart",
                "description": "This endpoint generates an invoice for the customer based on the products in their cart. It calculates the subtotal, applies any discount, adds tax, and returns the total amount for the invoice.",
                "operationId": "2b308879ce570e4448a665a18ffbe327",
                "requestBody": {
                    "description": "Invoice data to generate, including customer ID, tax rate, and optional discount",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tax_rate",
                                    "customer_id"
                                ],
                                "properties": {
                                    "discount": {
                                        "description": "Discount applied to the total amount (optional)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 10
                                    },
                                    "tax_rate": {
                                        "description": "Tax rate to apply to the subtotal (in percentage)",
                                        "type": "number",
                                        "format": "float",
                                        "example": 15
                                    },
                                    "customer_id": {
                                        "description": "ID of the customer whose cart will be used for the invoice",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invoice generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice generated successfully"
                                        },
                                        "invoice": {
                                            "properties": {
                                                "id": {
                                                    "description": "Invoice ID",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "customer_name": {
                                                    "description": "Customer's name",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "customer_email": {
                                                    "description": "Customer's email",
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "customer_address": {
                                                    "description": "Customer's address",
                                                    "type": "string",
                                                    "example": "1234 Elm St."
                                                },
                                                "subtotal": {
                                                    "description": "Subtotal of the cart items",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 100
                                                },
                                                "discount": {
                                                    "description": "Discount applied",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 10
                                                },
                                                "tax_rate": {
                                                    "description": "Tax rate applied",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 15
                                                },
                                                "tax_amount": {
                                                    "description": "Tax amount calculated",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 13.5
                                                },
                                                "total_amount": {
                                                    "description": "Total amount after discount and tax",
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 103.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Cart is empty or missing required parameters",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cart is empty"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No products in cart to generate invoice."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Customer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Customer not found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The customer associated with this cart could not be found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        },
                                        "messages": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred while generating the invoice."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Retrieve a paginated list of products",
                "description": "This endpoint returns a paginated list of products available in the system.",
                "operationId": "1bfaa78d1c2c3848ab8165c5dadcad3e",
                "responses": {
                    "200": {
                        "description": "Paginated list of products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "description": "Current page number",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "data": {
                                            "description": "List of products for the current page",
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Product ID",
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "description": "Product name",
                                                        "type": "string",
                                                        "example": "Sample Product"
                                                    },
                                                    "description": {
                                                        "description": "Product description",
                                                        "type": "string",
                                                        "example": "This is a sample product."
                                                    },
                                                    "price": {
                                                        "description": "Product price",
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 199.99
                                                    },
                                                    "quantity": {
                                                        "description": "Quantity in stock",
                                                        "type": "integer",
                                                        "example": 100
                                                    },
                                                    "category_id": {
                                                        "description": "ID of the associated category",
                                                        "type": "integer",
                                                        "example": 2
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "first_page_url": {
                                            "description": "URL for the first page",
                                            "type": "string",
                                            "example": "http://example.com/api/products?page=1"
                                        },
                                        "from": {
                                            "description": "Starting record number on the current page",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "description": "Total number of pages",
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "last_page_url": {
                                            "description": "URL for the last page",
                                            "type": "string",
                                            "example": "http://example.com/api/products?page=10"
                                        },
                                        "next_page_url": {
                                            "description": "URL for the next page, if available",
                                            "type": "string",
                                            "example": "http://example.com/api/products?page=2",
                                            "nullable": true
                                        },
                                        "path": {
                                            "description": "Base URL for the API",
                                            "type": "string",
                                            "example": "http://example.com/api/products"
                                        },
                                        "per_page": {
                                            "description": "Number of records per page",
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "prev_page_url": {
                                            "description": "URL for the previous page, if available",
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "to": {
                                            "description": "Ending record number on the current page",
                                            "type": "integer",
                                            "example": 15
                                        },
                                        "total": {
                                            "description": "Total number of records available",
                                            "type": "integer",
                                            "example": 150
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/save": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Add a new product or update an existing product",
                "description": "This endpoint is used to create a new product or update an existing product based on the provided product ID.",
                "operationId": "a9f8f29d8ec492bc4385e6a4d8406543",
                "requestBody": {
                    "description": "Product data to create or update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "price",
                                    "quantity",
                                    "category_id"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "Product ID (for update)",
                                        "type": "integer",
                                        "example": null
                                    },
                                    "name": {
                                        "description": "Product name",
                                        "type": "string",
                                        "example": "Sample Product"
                                    },
                                    "description": {
                                        "description": "Product description",
                                        "type": "string",
                                        "example": "This is a sample product."
                                    },
                                    "price": {
                                        "description": "Product price",
                                        "type": "number",
                                        "format": "float",
                                        "example": 199.99
                                    },
                                    "quantity": {
                                        "description": "Quantity in stock",
                                        "type": "integer",
                                        "example": 100
                                    },
                                    "category_id": {
                                        "description": "ID of the product category",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "description": "Product ID",
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Sample Product"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "This is a sample product."
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 199.99
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-11-13T10:00:00Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-11-13T10:00:00Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request - Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Bad Request"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed for the provided product data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/view/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get a product by ID",
                "description": "Retrieve a product's details by its ID.",
                "operationId": "546821070befb8b59e7d52bd434f0551",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the product to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Sample Product"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "This is a sample product."
                                        },
                                        "price": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 199.99
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "example": 100
                                        },
                                        "category_id": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-10-04T06:13:12.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2023-10-04T06:13:12.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No product found with the given ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/product/delete": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product by ID",
                "description": "Delete a product based on the provided ID.",
                "operationId": "4b4394e930a8b633e27e47cf059482f5",
                "requestBody": {
                    "description": "The ID of the product to delete",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                },
                                "example": "Deletion successful"
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Product not found"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No product found with the given ID."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server Error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Cart",
            "description": "Cart"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Customers",
            "description": "Customers"
        },
        {
            "name": "Invoice",
            "description": "Invoice"
        },
        {
            "name": "Products",
            "description": "Products"
        }
    ]
}